// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: proto/msg.proto

/* eslint-disable */

export const protobufPackage = "";

export interface ExternalMessage {
  d: number;
}

export interface ExternalRequest {
  content: string;
}

export interface ExternalResponse {
  result: string;
}

function createBaseExternalMessage(): ExternalMessage {
  return { d: 0 };
}

export const ExternalMessage: MessageFns<ExternalMessage> = {
  fromJSON(object: any): ExternalMessage {
    return { d: isSet(object.d) ? globalThis.Number(object.d) : 0 };
  },

  toJSON(message: ExternalMessage): unknown {
    const obj: any = {};
    if (message.d !== 0) {
      obj.d = Math.round(message.d);
    }
    return obj;
  },

  create(base?: DeepPartial<ExternalMessage>): ExternalMessage {
    return ExternalMessage.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ExternalMessage>): ExternalMessage {
    const message = createBaseExternalMessage();
    message.d = object.d ?? 0;
    return message;
  },
};

function createBaseExternalRequest(): ExternalRequest {
  return { content: "" };
}

export const ExternalRequest: MessageFns<ExternalRequest> = {
  fromJSON(object: any): ExternalRequest {
    return {
      content: isSet(object.content) ? globalThis.String(object.content) : "",
    };
  },

  toJSON(message: ExternalRequest): unknown {
    const obj: any = {};
    if (message.content !== "") {
      obj.content = message.content;
    }
    return obj;
  },

  create(base?: DeepPartial<ExternalRequest>): ExternalRequest {
    return ExternalRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ExternalRequest>): ExternalRequest {
    const message = createBaseExternalRequest();
    message.content = object.content ?? "";
    return message;
  },
};

function createBaseExternalResponse(): ExternalResponse {
  return { result: "" };
}

export const ExternalResponse: MessageFns<ExternalResponse> = {
  fromJSON(object: any): ExternalResponse {
    return {
      result: isSet(object.result) ? globalThis.String(object.result) : "",
    };
  },

  toJSON(message: ExternalResponse): unknown {
    const obj: any = {};
    if (message.result !== "") {
      obj.result = message.result;
    }
    return obj;
  },

  create(base?: DeepPartial<ExternalResponse>): ExternalResponse {
    return ExternalResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ExternalResponse>): ExternalResponse {
    const message = createBaseExternalResponse();
    message.result = object.result ?? "";
    return message;
  },
};

type Builtin =
  | Date
  | Function
  | Uint8Array
  | string
  | number
  | boolean
  | undefined;

export type DeepPartial<T> = T extends Builtin
  ? T
  : T extends globalThis.Array<infer U>
    ? globalThis.Array<DeepPartial<U>>
    : T extends ReadonlyArray<infer U>
      ? ReadonlyArray<DeepPartial<U>>
      : T extends {}
        ? { [K in keyof T]?: DeepPartial<T[K]> }
        : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
