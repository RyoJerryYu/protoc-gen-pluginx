// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file proto/examplepb/a_bit_of_everything.proto (package proto.examplepb, syntax proto3)
/* eslint-disable */

import type {
  GenEnum,
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv1";
import {
  enumDesc,
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";
import type {
  DurationSchema,
  Empty,
  EmptySchema,
  FieldMask,
  StringValueSchema,
  Timestamp,
} from "@bufbuild/protobuf/wkt";
import {
  file_google_protobuf_duration,
  file_google_protobuf_empty,
  file_google_protobuf_field_mask,
  file_google_protobuf_timestamp,
  file_google_protobuf_wrappers,
} from "@bufbuild/protobuf/wkt";
import type { Status } from "../../google/rpc/status_pb";
import { file_google_rpc_status } from "../../google/rpc/status_pb";
import type { OneofEnumMessageSchema } from "../oneofenum/oneof_enum_pb";
import { file_proto_oneofenum_oneof_enum } from "../oneofenum/oneof_enum_pb";
import type {
  MessagePathEnum_NestedPathEnum,
  MessageWithNestedPathEnumSchema,
  MessageWithPathEnumSchema,
  PathEnum,
  snake_case_for_import,
} from "../pathenum/path_enum_pb";
import { file_proto_pathenum_path_enum } from "../pathenum/path_enum_pb";
import type { StringMessageSchema } from "../sub/message_pb";
import { file_proto_sub_message } from "../sub/message_pb";
import type { IdMessageSchema } from "../sub2/message_pb";
import { file_proto_sub2_message } from "../sub2/message_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/examplepb/a_bit_of_everything.proto.
 */
export const file_proto_examplepb_a_bit_of_everything: GenFile =
  /*@__PURE__*/
  fileDesc(
    "",
    [
      file_google_api_annotations,
      file_google_api_field_behavior,
      file_google_protobuf_duration,
      file_google_protobuf_empty,
      file_google_protobuf_field_mask,
      file_google_protobuf_timestamp,
      file_google_protobuf_wrappers,
      file_google_rpc_status,
      file_proto_oneofenum_oneof_enum,
      file_proto_pathenum_path_enum,
      file_proto_sub_message,
      file_proto_sub2_message,
      file_protoc_gen_openapiv2_options_annotations,
    ],
  );

/**
 * @generated from message proto.examplepb.ErrorResponse
 */
export type ErrorResponse = Message<"proto.examplepb.ErrorResponse"> & {
  /**
   * @generated from field: string correlationId = 1;
   */
  correlationId: string;

  /**
   * @generated from field: proto.examplepb.ErrorObject error = 2;
   */
  error?: ErrorObject;
};

/**
 * Describes the message proto.examplepb.ErrorResponse.
 * Use `create(ErrorResponseSchema)` to create a new message.
 */
export const ErrorResponseSchema: GenMessage<ErrorResponse> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 0);

/**
 * @generated from message proto.examplepb.ErrorObject
 */
export type ErrorObject = Message<"proto.examplepb.ErrorObject"> & {
  /**
   * @generated from field: int32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message proto.examplepb.ErrorObject.
 * Use `create(ErrorObjectSchema)` to create a new message.
 */
export const ErrorObjectSchema: GenMessage<ErrorObject> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 1);

/**
 * Intentionally complicated message type to cover many features of Protobuf.
 *
 * @generated from message proto.examplepb.ABitOfEverything
 */
export type ABitOfEverything = Message<"proto.examplepb.ABitOfEverything"> & {
  /**
   * @generated from field: proto.examplepb.ABitOfEverything.Nested single_nested = 25;
   */
  singleNested?: ABitOfEverything_Nested;

  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: repeated proto.examplepb.ABitOfEverything.Nested nested = 2;
   */
  nested: ABitOfEverything_Nested[];

  /**
   * @generated from field: float float_value = 3;
   */
  floatValue: number;

  /**
   * @generated from field: double double_value = 4;
   */
  doubleValue: number;

  /**
   * @generated from field: int64 int64_value = 5;
   */
  int64Value: bigint;

  /**
   * @generated from field: uint64 uint64_value = 6;
   */
  uint64Value: bigint;

  /**
   * @generated from field: int32 int32_value = 7;
   */
  int32Value: number;

  /**
   * @generated from field: fixed64 fixed64_value = 8;
   */
  fixed64Value: bigint;

  /**
   * @generated from field: fixed32 fixed32_value = 9;
   */
  fixed32Value: number;

  /**
   * @generated from field: bool bool_value = 10;
   */
  boolValue: boolean;

  /**
   * @generated from field: string string_value = 11;
   */
  stringValue: string;

  /**
   * @generated from field: bytes bytes_value = 29;
   */
  bytesValue: Uint8Array;

  /**
   * @generated from field: uint32 uint32_value = 13;
   */
  uint32Value: number;

  /**
   * @generated from field: proto.examplepb.NumericEnum enum_value = 14;
   */
  enumValue: NumericEnum;

  /**
   * @generated from field: pathenum.PathEnum path_enum_value = 30;
   */
  pathEnumValue: PathEnum;

  /**
   * @generated from field: pathenum.MessagePathEnum.NestedPathEnum nested_path_enum_value = 31;
   */
  nestedPathEnumValue: MessagePathEnum_NestedPathEnum;

  /**
   * @generated from field: sfixed32 sfixed32_value = 15;
   */
  sfixed32Value: number;

  /**
   * @generated from field: sfixed64 sfixed64_value = 16;
   */
  sfixed64Value: bigint;

  /**
   * @generated from field: sint32 sint32_value = 17;
   */
  sint32Value: number;

  /**
   * @generated from field: sint64 sint64_value = 18;
   */
  sint64Value: bigint;

  /**
   * @generated from field: repeated string repeated_string_value = 19;
   */
  repeatedStringValue: string[];

  /**
   * @generated from oneof proto.examplepb.ABitOfEverything.oneof_value
   */
  oneofValue:
    | {
        /**
         * @generated from field: google.protobuf.Empty oneof_empty = 20;
         */
        value: Empty;
        case: "oneofEmpty";
      }
    | {
        /**
         * @generated from field: string oneof_string = 21;
         */
        value: string;
        case: "oneofString";
      }
    | { case: undefined; value?: undefined };

  /**
   * @generated from field: map<string, proto.examplepb.NumericEnum> map_value = 22;
   */
  mapValue: { [key: string]: NumericEnum };

  /**
   * @generated from field: map<string, string> mapped_string_value = 23;
   */
  mappedStringValue: { [key: string]: string };

  /**
   * @generated from field: map<string, proto.examplepb.ABitOfEverything.Nested> mapped_nested_value = 24;
   */
  mappedNestedValue: { [key: string]: ABitOfEverything_Nested };

  /**
   * @generated from field: string nonConventionalNameValue = 26;
   */
  nonConventionalNameValue: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp_value = 27;
   */
  timestampValue?: Timestamp;

  /**
   * repeated enum value. it is comma-separated in query
   *
   * @generated from field: repeated proto.examplepb.NumericEnum repeated_enum_value = 28;
   */
  repeatedEnumValue: NumericEnum[];

  /**
   * repeated numeric enum comment (This comment is overridden by the field annotation)
   *
   * @generated from field: repeated proto.examplepb.NumericEnum repeated_enum_annotation = 32;
   */
  repeatedEnumAnnotation: NumericEnum[];

  /**
   * numeric enum comment (This comment is overridden by the field annotation)
   *
   * @generated from field: proto.examplepb.NumericEnum enum_value_annotation = 33;
   */
  enumValueAnnotation: NumericEnum;

  /**
   * repeated string comment (This comment is overridden by the field annotation)
   *
   * @generated from field: repeated string repeated_string_annotation = 34;
   */
  repeatedStringAnnotation: string[];

  /**
   * repeated nested object comment (This comment is overridden by the field annotation)
   *
   * @generated from field: repeated proto.examplepb.ABitOfEverything.Nested repeated_nested_annotation = 35;
   */
  repeatedNestedAnnotation: ABitOfEverything_Nested[];

  /**
   * nested object comments (This comment is overridden by the field annotation)
   *
   * @generated from field: proto.examplepb.ABitOfEverything.Nested nested_annotation = 36;
   */
  nestedAnnotation?: ABitOfEverything_Nested;

  /**
   * @generated from field: int64 int64_override_type = 37;
   */
  int64OverrideType: bigint;

  /**
   * mark a field as required in Open API definition
   *
   * @generated from field: string required_string_via_field_behavior_annotation = 38;
   */
  requiredStringViaFieldBehaviorAnnotation: string;

  /**
   * mark a field as readonly in Open API definition
   *
   * @generated from field: string output_only_string_via_field_behavior_annotation = 39;
   */
  outputOnlyStringViaFieldBehaviorAnnotation: string;

  /**
   * @generated from field: optional string optional_string_value = 40;
   */
  optionalStringValue?: string;

  /**
   * Test openapiv2 generation of repeated fields
   *
   * @generated from field: repeated string product_id = 41;
   */
  productId: string[];

  /**
   * Test openapiv2 generation of required fields with annotation and jsonschema to reproduce
   *
   * @generated from field: string optional_string_field = 42;
   */
  optionalStringField: string;

  /**
   * @generated from field: string required_string_field_1 = 43;
   */
  requiredStringField1: string;

  /**
   * @generated from field: string required_string_field_2 = 44;
   */
  requiredStringField2: string;

  /**
   * Test openapiv2 handling of required json_name fields
   *
   * @generated from field: string required_field_behavior_json_name = 45 [json_name = "required_field_behavior_json_name_custom"];
   */
  requiredFieldBehaviorJsonName: string;

  /**
   * @generated from field: string required_field_schema_json_name = 46 [json_name = "required_field_schema_json_name_custom"];
   */
  requiredFieldSchemaJsonName: string;

  /**
   * Trailing only
   *
   * @generated from field: string trailing_only = 47;
   */
  trailingOnly: string;

  /**
   * Trailing only dot.
   *
   * @generated from field: string trailing_only_dot = 48;
   */
  trailingOnlyDot: string;

  /**
   * Leading both
   *
   * Trailing both.
   *
   * @generated from field: string trailing_both = 49;
   */
  trailingBoth: string;

  /**
   * Leading multiline
   *
   * This is an example of a multi-line comment.
   *
   * Trailing multiline.
   *
   * @generated from field: string trailing_multiline = 50;
   */
  trailingMultiline: string;

  /**
   * Specify a custom format of repeated field items
   *
   * @generated from field: repeated string uuids = 51;
   */
  uuids: string[];
};

/**
 * Describes the message proto.examplepb.ABitOfEverything.
 * Use `create(ABitOfEverythingSchema)` to create a new message.
 */
export const ABitOfEverythingSchema: GenMessage<ABitOfEverything> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 2);

/**
 * Nested is nested type.
 *
 * @generated from message proto.examplepb.ABitOfEverything.Nested
 */
export type ABitOfEverything_Nested =
  Message<"proto.examplepb.ABitOfEverything.Nested"> & {
    /**
     * name is nested field.
     *
     * @generated from field: string name = 1;
     */
    name: string;

    /**
     * @generated from field: uint32 amount = 2;
     */
    amount: number;

    /**
     * DeepEnum comment.
     *
     * @generated from field: proto.examplepb.ABitOfEverything.Nested.DeepEnum ok = 3;
     */
    ok: ABitOfEverything_Nested_DeepEnum;
  };

/**
 * Describes the message proto.examplepb.ABitOfEverything.Nested.
 * Use `create(ABitOfEverything_NestedSchema)` to create a new message.
 */
export const ABitOfEverything_NestedSchema: GenMessage<ABitOfEverything_Nested> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 2, 0);

/**
 * DeepEnum is one or zero.
 *
 * @generated from enum proto.examplepb.ABitOfEverything.Nested.DeepEnum
 */
export enum ABitOfEverything_Nested_DeepEnum {
  /**
   * FALSE is false.
   *
   * @generated from enum value: FALSE = 0;
   */
  FALSE = 0,

  /**
   * TRUE is true.
   *
   * @generated from enum value: TRUE = 1;
   */
  TRUE = 1,
}

/**
 * Describes the enum proto.examplepb.ABitOfEverything.Nested.DeepEnum.
 */
export const ABitOfEverything_Nested_DeepEnumSchema: GenEnum<ABitOfEverything_Nested_DeepEnum> =
  /*@__PURE__*/
  enumDesc(file_proto_examplepb_a_bit_of_everything, 2, 0, 0);

/**
 * ABitOfEverythingRepeated is used to validate repeated path parameter functionality
 *
 * @generated from message proto.examplepb.ABitOfEverythingRepeated
 */
export type ABitOfEverythingRepeated =
  Message<"proto.examplepb.ABitOfEverythingRepeated"> & {
    /**
     * repeated values. they are comma-separated in path
     *
     * @generated from field: repeated float path_repeated_float_value = 1;
     */
    pathRepeatedFloatValue: number[];

    /**
     * @generated from field: repeated double path_repeated_double_value = 2;
     */
    pathRepeatedDoubleValue: number[];

    /**
     * @generated from field: repeated int64 path_repeated_int64_value = 3;
     */
    pathRepeatedInt64Value: bigint[];

    /**
     * @generated from field: repeated uint64 path_repeated_uint64_value = 4;
     */
    pathRepeatedUint64Value: bigint[];

    /**
     * @generated from field: repeated int32 path_repeated_int32_value = 5;
     */
    pathRepeatedInt32Value: number[];

    /**
     * @generated from field: repeated fixed64 path_repeated_fixed64_value = 6;
     */
    pathRepeatedFixed64Value: bigint[];

    /**
     * @generated from field: repeated fixed32 path_repeated_fixed32_value = 7;
     */
    pathRepeatedFixed32Value: number[];

    /**
     * @generated from field: repeated bool path_repeated_bool_value = 8;
     */
    pathRepeatedBoolValue: boolean[];

    /**
     * @generated from field: repeated string path_repeated_string_value = 9;
     */
    pathRepeatedStringValue: string[];

    /**
     * @generated from field: repeated bytes path_repeated_bytes_value = 10;
     */
    pathRepeatedBytesValue: Uint8Array[];

    /**
     * @generated from field: repeated uint32 path_repeated_uint32_value = 11;
     */
    pathRepeatedUint32Value: number[];

    /**
     * @generated from field: repeated proto.examplepb.NumericEnum path_repeated_enum_value = 12;
     */
    pathRepeatedEnumValue: NumericEnum[];

    /**
     * @generated from field: repeated sfixed32 path_repeated_sfixed32_value = 13;
     */
    pathRepeatedSfixed32Value: number[];

    /**
     * @generated from field: repeated sfixed64 path_repeated_sfixed64_value = 14;
     */
    pathRepeatedSfixed64Value: bigint[];

    /**
     * @generated from field: repeated sint32 path_repeated_sint32_value = 15;
     */
    pathRepeatedSint32Value: number[];

    /**
     * @generated from field: repeated sint64 path_repeated_sint64_value = 16;
     */
    pathRepeatedSint64Value: bigint[];
  };

/**
 * Describes the message proto.examplepb.ABitOfEverythingRepeated.
 * Use `create(ABitOfEverythingRepeatedSchema)` to create a new message.
 */
export const ABitOfEverythingRepeatedSchema: GenMessage<ABitOfEverythingRepeated> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 3);

/**
 * @generated from message proto.examplepb.CheckStatusResponse
 */
export type CheckStatusResponse =
  Message<"proto.examplepb.CheckStatusResponse"> & {
    /**
     * @generated from field: google.rpc.Status status = 1;
     */
    status?: Status;
  };

/**
 * Describes the message proto.examplepb.CheckStatusResponse.
 * Use `create(CheckStatusResponseSchema)` to create a new message.
 */
export const CheckStatusResponseSchema: GenMessage<CheckStatusResponse> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 4);

/**
 * @generated from message proto.examplepb.Body
 */
export type Body = Message<"proto.examplepb.Body"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message proto.examplepb.Body.
 * Use `create(BodySchema)` to create a new message.
 */
export const BodySchema: GenMessage<Body> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 5);

/**
 * @generated from message proto.examplepb.MessageWithBody
 */
export type MessageWithBody = Message<"proto.examplepb.MessageWithBody"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: proto.examplepb.Body data = 2;
   */
  data?: Body;
};

/**
 * Describes the message proto.examplepb.MessageWithBody.
 * Use `create(MessageWithBodySchema)` to create a new message.
 */
export const MessageWithBodySchema: GenMessage<MessageWithBody> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 6);

/**
 * UpdateV2Request request for update includes the message and the update mask
 *
 * @generated from message proto.examplepb.UpdateV2Request
 */
export type UpdateV2Request = Message<"proto.examplepb.UpdateV2Request"> & {
  /**
   * @generated from field: proto.examplepb.ABitOfEverything abe = 1;
   */
  abe?: ABitOfEverything;

  /**
   * The paths to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message proto.examplepb.UpdateV2Request.
 * Use `create(UpdateV2RequestSchema)` to create a new message.
 */
export const UpdateV2RequestSchema: GenMessage<UpdateV2Request> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 7);

/**
 * An example resource type from AIP-123 used to test the behavior described in
 * the CreateBookRequest message.
 *
 * See: https://google.aip.dev/123
 *
 * @generated from message proto.examplepb.Book
 */
export type Book = Message<"proto.examplepb.Book"> & {
  /**
   * The resource name of the book.
   *
   * Format: `publishers/{publisher}/books/{book}`
   *
   * Example: `publishers/1257894000000000000/books/my-book`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The book's ID.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Output only. Creation time of the book.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message proto.examplepb.Book.
 * Use `create(BookSchema)` to create a new message.
 */
export const BookSchema: GenMessage<Book> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 8);

/**
 * A standard Create message from AIP-133 with a user-specified ID.
 * The user-specified ID (the `book_id` field in this example) must become a
 * query parameter in the OpenAPI spec.
 *
 * See: https://google.aip.dev/133#user-specified-ids
 *
 * @generated from message proto.examplepb.CreateBookRequest
 */
export type CreateBookRequest = Message<"proto.examplepb.CreateBookRequest"> & {
  /**
   * The publisher in which to create the book.
   *
   * Format: `publishers/{publisher}`
   *
   * Example: `publishers/1257894000000000000`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The book to create.
   *
   * @generated from field: proto.examplepb.Book book = 2;
   */
  book?: Book;

  /**
   * The ID to use for the book.
   *
   * This must start with an alphanumeric character.
   *
   * @generated from field: string book_id = 3;
   */
  bookId: string;
};

/**
 * Describes the message proto.examplepb.CreateBookRequest.
 * Use `create(CreateBookRequestSchema)` to create a new message.
 */
export const CreateBookRequestSchema: GenMessage<CreateBookRequest> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 9);

/**
 * A standard Update message from AIP-134
 *
 * See: https://google.aip.dev/134#request-message
 *
 * @generated from message proto.examplepb.UpdateBookRequest
 */
export type UpdateBookRequest = Message<"proto.examplepb.UpdateBookRequest"> & {
  /**
   * The book to update.
   *
   * The book's `name` field is used to identify the book to be updated.
   * Format: publishers/{publisher}/books/{book}
   *
   * @generated from field: proto.examplepb.Book book = 1;
   */
  book?: Book;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If set to true, and the book is not found, a new book will be created.
   * In this situation, `update_mask` is ignored.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;
};

/**
 * Describes the message proto.examplepb.UpdateBookRequest.
 * Use `create(UpdateBookRequestSchema)` to create a new message.
 */
export const UpdateBookRequestSchema: GenMessage<UpdateBookRequest> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 10);

/**
 * @generated from message proto.examplepb.SnakeEnumRequest
 */
export type SnakeEnumRequest = Message<"proto.examplepb.SnakeEnumRequest"> & {
  /**
   * @generated from field: proto.examplepb.snake_case_enum what = 1;
   */
  what: snake_case_enum;

  /**
   * @generated from field: proto.examplepb.snake_case_0_enum who = 2;
   */
  who: snake_case_0_enum;

  /**
   * @generated from field: pathenum.snake_case_for_import where = 3;
   */
  where: snake_case_for_import;
};

/**
 * Describes the message proto.examplepb.SnakeEnumRequest.
 * Use `create(SnakeEnumRequestSchema)` to create a new message.
 */
export const SnakeEnumRequestSchema: GenMessage<SnakeEnumRequest> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 11);

/**
 * @generated from message proto.examplepb.SnakeEnumResponse
 */
export type SnakeEnumResponse =
  Message<"proto.examplepb.SnakeEnumResponse"> & {};

/**
 * Describes the message proto.examplepb.SnakeEnumResponse.
 * Use `create(SnakeEnumResponseSchema)` to create a new message.
 */
export const SnakeEnumResponseSchema: GenMessage<SnakeEnumResponse> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 12);

/**
 * Required message type -> OpenAPI
 * https://github.com/grpc-ecosystem/grpc-gateway/issues/2837
 *
 * @generated from message proto.examplepb.RequiredMessageTypeRequest
 */
export type RequiredMessageTypeRequest =
  Message<"proto.examplepb.RequiredMessageTypeRequest"> & {
    /**
     * @generated from field: string id = 1;
     */
    id: string;

    /**
     * @generated from field: proto.examplepb.Foo foo = 2;
     */
    foo?: Foo;
  };

/**
 * Describes the message proto.examplepb.RequiredMessageTypeRequest.
 * Use `create(RequiredMessageTypeRequestSchema)` to create a new message.
 */
export const RequiredMessageTypeRequestSchema: GenMessage<RequiredMessageTypeRequest> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 13);

/**
 * @generated from message proto.examplepb.Foo
 */
export type Foo = Message<"proto.examplepb.Foo"> & {
  /**
   * @generated from field: proto.examplepb.Bar bar = 1;
   */
  bar?: Bar;
};

/**
 * Describes the message proto.examplepb.Foo.
 * Use `create(FooSchema)` to create a new message.
 */
export const FooSchema: GenMessage<Foo> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 14);

/**
 * @generated from message proto.examplepb.Bar
 */
export type Bar = Message<"proto.examplepb.Bar"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message proto.examplepb.Bar.
 * Use `create(BarSchema)` to create a new message.
 */
export const BarSchema: GenMessage<Bar> =
  /*@__PURE__*/
  messageDesc(file_proto_examplepb_a_bit_of_everything, 15);

/**
 * NumericEnum is one or zero.
 *
 * @generated from enum proto.examplepb.NumericEnum
 */
export enum NumericEnum {
  /**
   * ZERO means 0
   *
   * @generated from enum value: ZERO = 0;
   */
  ZERO = 0,

  /**
   * ONE means 1
   *
   * @generated from enum value: ONE = 1;
   */
  ONE = 1,
}

/**
 * Describes the enum proto.examplepb.NumericEnum.
 */
export const NumericEnumSchema: GenEnum<NumericEnum> =
  /*@__PURE__*/
  enumDesc(file_proto_examplepb_a_bit_of_everything, 0);

/**
 * Ignoring lint warnings as this enum type exist to validate proper functionality
 * for projects that don't follow these lint rules.
 * buf:lint:ignore ENUM_PASCAL_CASE
 *
 * @generated from enum proto.examplepb.snake_case_enum
 */
export enum snake_case_enum {
  /**
   * buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
   *
   * @generated from enum value: value_c = 0;
   */
  value_c = 0,

  /**
   * buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
   *
   * @generated from enum value: value_d = 1;
   */
  value_d = 1,
}

/**
 * Describes the enum proto.examplepb.snake_case_enum.
 */
export const snake_case_enumSchema: GenEnum<snake_case_enum> =
  /*@__PURE__*/
  enumDesc(file_proto_examplepb_a_bit_of_everything, 1);

/**
 * Ignoring lint warnings as this enum type exist to validate proper functionality
 * for projects that don't follow these lint rules.
 * buf:lint:ignore ENUM_PASCAL_CASE
 *
 * @generated from enum proto.examplepb.snake_case_0_enum
 */
export enum snake_case_0_enum {
  /**
   * buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
   *
   * @generated from enum value: value_e = 0;
   */
  value_e = 0,

  /**
   * buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
   *
   * @generated from enum value: value_f = 1;
   */
  value_f = 1,
}

/**
 * Describes the enum proto.examplepb.snake_case_0_enum.
 */
export const snake_case_0_enumSchema: GenEnum<snake_case_0_enum> =
  /*@__PURE__*/
  enumDesc(file_proto_examplepb_a_bit_of_everything, 2);

/**
 * ABitOfEverything service is used to validate that APIs with complicated
 * proto messages and URL templates are still processed correctly.
 *
 * @generated from service proto.examplepb.ABitOfEverythingService
 */
export const ABitOfEverythingService: GenService<{
  /**
   * Create a new ABitOfEverything
   *
   * This API creates a new ABitOfEverything
   *
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CreateBody
   */
  createBody: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * Create a book.
   *
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CreateBook
   */
  createBook: {
    methodKind: "unary";
    input: typeof CreateBookRequestSchema;
    output: typeof BookSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.UpdateBook
   */
  updateBook: {
    methodKind: "unary";
    input: typeof UpdateBookRequestSchema;
    output: typeof BookSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Lookup
   */
  lookup: {
    methodKind: "unary";
    input: typeof IdMessageSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Custom
   */
  custom: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.DoubleColon
   */
  doubleColon: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.UpdateV2
   */
  updateV2: {
    methodKind: "unary";
    input: typeof UpdateV2RequestSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof IdMessageSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.GetQuery
   */
  getQuery: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.GetRepeatedQuery
   */
  getRepeatedQuery: {
    methodKind: "unary";
    input: typeof ABitOfEverythingRepeatedSchema;
    output: typeof ABitOfEverythingRepeatedSchema;
  };
  /**
   * Echo allows posting a StringMessage value.
   *
   * It also exposes multiple bindings.
   *
   * This makes it useful when validating that the OpenAPI v2 API
   * description exposes documentation correctly on all paths
   * defined as additional_bindings in the proto.
   *
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Echo
   */
  echo: {
    methodKind: "unary";
    input: typeof StringMessageSchema;
    output: typeof StringMessageSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.DeepPathEcho
   */
  deepPathEcho: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.NoBindings
   */
  noBindings: {
    methodKind: "unary";
    input: typeof DurationSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.Timeout
   */
  timeout: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.ErrorWithDetails
   */
  errorWithDetails: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.GetMessageWithBody
   */
  getMessageWithBody: {
    methodKind: "unary";
    input: typeof MessageWithBodySchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.PostWithEmptyBody
   */
  postWithEmptyBody: {
    methodKind: "unary";
    input: typeof BodySchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckGetQueryParams
   */
  checkGetQueryParams: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckNestedEnumGetQueryParams
   */
  checkNestedEnumGetQueryParams: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckPostQueryParams
   */
  checkPostQueryParams: {
    methodKind: "unary";
    input: typeof ABitOfEverythingSchema;
    output: typeof ABitOfEverythingSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.OverwriteRequestContentType
   */
  overwriteRequestContentType: {
    methodKind: "unary";
    input: typeof BodySchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.OverwriteResponseContentType
   */
  overwriteResponseContentType: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof StringValueSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckExternalPathEnum
   */
  checkExternalPathEnum: {
    methodKind: "unary";
    input: typeof MessageWithPathEnumSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckExternalNestedPathEnum
   */
  checkExternalNestedPathEnum: {
    methodKind: "unary";
    input: typeof MessageWithNestedPathEnumSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.CheckStatus
   */
  checkStatus: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof CheckStatusResponseSchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.PostOneofEnum
   */
  postOneofEnum: {
    methodKind: "unary";
    input: typeof OneofEnumMessageSchema;
    output: typeof EmptySchema;
  };
  /**
   * @generated from rpc proto.examplepb.ABitOfEverythingService.PostRequiredMessageType
   */
  postRequiredMessageType: {
    methodKind: "unary";
    input: typeof RequiredMessageTypeRequestSchema;
    output: typeof EmptySchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_proto_examplepb_a_bit_of_everything, 0);

/**
 * // camelCase and lowercase service names are valid but not recommended (use TitleCase instead)
 * service camelCaseServiceName {
 *   rpc Empty(google.protobuf.Empty) returns (google.protobuf.Empty) {
 *     option (google.api.http) = {get: "/v2/example/empty"};
 *   }
 * }
 *
 * @generated from service proto.examplepb.AnotherServiceWithNoBindings
 */
export const AnotherServiceWithNoBindings: GenService<{
  /**
   * @generated from rpc proto.examplepb.AnotherServiceWithNoBindings.NoBindings
   */
  noBindings: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_proto_examplepb_a_bit_of_everything, 1);

/**
 * @generated from service proto.examplepb.SnakeEnumService
 */
export const SnakeEnumService: GenService<{
  /**
   * @generated from rpc proto.examplepb.SnakeEnumService.SnakeEnum
   */
  snakeEnum: {
    methodKind: "unary";
    input: typeof SnakeEnumRequestSchema;
    output: typeof SnakeEnumResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_proto_examplepb_a_bit_of_everything, 2);
