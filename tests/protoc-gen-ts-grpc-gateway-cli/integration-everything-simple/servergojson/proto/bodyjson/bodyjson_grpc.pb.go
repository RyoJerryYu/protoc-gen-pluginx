// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: proto/bodyjson/bodyjson.proto

package bodyjson

import (
	context "context"
	examplepb "github.com/RyoJerryYu/protoc-gen-pluginx/tests/protoc-gen-ts-grpc-gateway-cli/integration-everything-simple/servergojson/proto/examplepb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	BodyJSONService_PostEnumBody_FullMethodName            = "/proto.bodyjson.BodyJSONService/PostEnumBody"
	BodyJSONService_PostStringBody_FullMethodName          = "/proto.bodyjson.BodyJSONService/PostStringBody"
	BodyJSONService_PostRepeatedMessageBody_FullMethodName = "/proto.bodyjson.BodyJSONService/PostRepeatedMessageBody"
	BodyJSONService_PostRepeatedEnumBody_FullMethodName    = "/proto.bodyjson.BodyJSONService/PostRepeatedEnumBody"
	BodyJSONService_PostRepeatedStringBody_FullMethodName  = "/proto.bodyjson.BodyJSONService/PostRepeatedStringBody"
	BodyJSONService_PostMapMessageBody_FullMethodName      = "/proto.bodyjson.BodyJSONService/PostMapMessageBody"
	BodyJSONService_PostMapEnumBody_FullMethodName         = "/proto.bodyjson.BodyJSONService/PostMapEnumBody"
	BodyJSONService_PostMapStringBody_FullMethodName       = "/proto.bodyjson.BodyJSONService/PostMapStringBody"
	BodyJSONService_PostTimestampBody_FullMethodName       = "/proto.bodyjson.BodyJSONService/PostTimestampBody"
	BodyJSONService_PostFieldMaskBody_FullMethodName       = "/proto.bodyjson.BodyJSONService/PostFieldMaskBody"
	BodyJSONService_PostStructBody_FullMethodName          = "/proto.bodyjson.BodyJSONService/PostStructBody"
	BodyJSONService_PostValueBody_FullMethodName           = "/proto.bodyjson.BodyJSONService/PostValueBody"
	BodyJSONService_PostListValueBody_FullMethodName       = "/proto.bodyjson.BodyJSONService/PostListValueBody"
	BodyJSONService_PostWrapperBody_FullMethodName         = "/proto.bodyjson.BodyJSONService/PostWrapperBody"
)

// BodyJSONServiceClient is the client API for BodyJSONService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BodyJSONServiceClient interface {
	PostEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostRepeatedMessageBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostRepeatedEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostRepeatedStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostMapMessageBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostMapEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostMapStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	PostTimestampBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	PostFieldMaskBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	PostStructBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	PostValueBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	PostListValueBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	PostWrapperBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
}

type bodyJSONServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBodyJSONServiceClient(cc grpc.ClientConnInterface) BodyJSONServiceClient {
	return &bodyJSONServiceClient{cc}
}

func (c *bodyJSONServiceClient) PostEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostEnumBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostStringBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostRepeatedMessageBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostRepeatedMessageBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostRepeatedEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostRepeatedEnumBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostRepeatedStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostRepeatedStringBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostMapMessageBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostMapMessageBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostMapEnumBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostMapEnumBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostMapStringBody(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, BodyJSONService_PostMapStringBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostTimestampBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostTimestampBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostFieldMaskBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostFieldMaskBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostStructBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostStructBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostValueBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostValueBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostListValueBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostListValueBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bodyJSONServiceClient) PostWrapperBody(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, BodyJSONService_PostWrapperBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BodyJSONServiceServer is the server API for BodyJSONService service.
// All implementations must embed UnimplementedBodyJSONServiceServer
// for forward compatibility.
type BodyJSONServiceServer interface {
	PostEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostRepeatedMessageBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostRepeatedEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostRepeatedStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostMapMessageBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostMapEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostMapStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	PostTimestampBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	PostFieldMaskBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	PostStructBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	PostValueBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	PostListValueBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	PostWrapperBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	mustEmbedUnimplementedBodyJSONServiceServer()
}

// UnimplementedBodyJSONServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBodyJSONServiceServer struct{}

func (UnimplementedBodyJSONServiceServer) PostEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostEnumBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostStringBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostRepeatedMessageBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostRepeatedMessageBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostRepeatedEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostRepeatedEnumBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostRepeatedStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostRepeatedStringBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostMapMessageBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMapMessageBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostMapEnumBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMapEnumBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostMapStringBody(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMapStringBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostTimestampBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTimestampBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostFieldMaskBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostFieldMaskBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostStructBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostStructBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostValueBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostValueBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostListValueBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostListValueBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) PostWrapperBody(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostWrapperBody not implemented")
}
func (UnimplementedBodyJSONServiceServer) mustEmbedUnimplementedBodyJSONServiceServer() {}
func (UnimplementedBodyJSONServiceServer) testEmbeddedByValue()                         {}

// UnsafeBodyJSONServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BodyJSONServiceServer will
// result in compilation errors.
type UnsafeBodyJSONServiceServer interface {
	mustEmbedUnimplementedBodyJSONServiceServer()
}

func RegisterBodyJSONServiceServer(s grpc.ServiceRegistrar, srv BodyJSONServiceServer) {
	// If the following call pancis, it indicates UnimplementedBodyJSONServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&BodyJSONService_ServiceDesc, srv)
}

func _BodyJSONService_PostEnumBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostEnumBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostEnumBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostEnumBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostStringBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostStringBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostStringBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostStringBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostRepeatedMessageBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostRepeatedMessageBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostRepeatedMessageBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostRepeatedMessageBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostRepeatedEnumBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostRepeatedEnumBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostRepeatedEnumBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostRepeatedEnumBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostRepeatedStringBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostRepeatedStringBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostRepeatedStringBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostRepeatedStringBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostMapMessageBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostMapMessageBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostMapMessageBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostMapMessageBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostMapEnumBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostMapEnumBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostMapEnumBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostMapEnumBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostMapStringBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostMapStringBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostMapStringBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostMapStringBody(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostTimestampBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostTimestampBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostTimestampBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostTimestampBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostFieldMaskBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostFieldMaskBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostFieldMaskBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostFieldMaskBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostStructBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostStructBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostStructBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostStructBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostValueBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostValueBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostValueBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostValueBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostListValueBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostListValueBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostListValueBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostListValueBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BodyJSONService_PostWrapperBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BodyJSONServiceServer).PostWrapperBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BodyJSONService_PostWrapperBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BodyJSONServiceServer).PostWrapperBody(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

// BodyJSONService_ServiceDesc is the grpc.ServiceDesc for BodyJSONService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BodyJSONService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.bodyjson.BodyJSONService",
	HandlerType: (*BodyJSONServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEnumBody",
			Handler:    _BodyJSONService_PostEnumBody_Handler,
		},
		{
			MethodName: "PostStringBody",
			Handler:    _BodyJSONService_PostStringBody_Handler,
		},
		{
			MethodName: "PostRepeatedMessageBody",
			Handler:    _BodyJSONService_PostRepeatedMessageBody_Handler,
		},
		{
			MethodName: "PostRepeatedEnumBody",
			Handler:    _BodyJSONService_PostRepeatedEnumBody_Handler,
		},
		{
			MethodName: "PostRepeatedStringBody",
			Handler:    _BodyJSONService_PostRepeatedStringBody_Handler,
		},
		{
			MethodName: "PostMapMessageBody",
			Handler:    _BodyJSONService_PostMapMessageBody_Handler,
		},
		{
			MethodName: "PostMapEnumBody",
			Handler:    _BodyJSONService_PostMapEnumBody_Handler,
		},
		{
			MethodName: "PostMapStringBody",
			Handler:    _BodyJSONService_PostMapStringBody_Handler,
		},
		{
			MethodName: "PostTimestampBody",
			Handler:    _BodyJSONService_PostTimestampBody_Handler,
		},
		{
			MethodName: "PostFieldMaskBody",
			Handler:    _BodyJSONService_PostFieldMaskBody_Handler,
		},
		{
			MethodName: "PostStructBody",
			Handler:    _BodyJSONService_PostStructBody_Handler,
		},
		{
			MethodName: "PostValueBody",
			Handler:    _BodyJSONService_PostValueBody_Handler,
		},
		{
			MethodName: "PostListValueBody",
			Handler:    _BodyJSONService_PostListValueBody_Handler,
		},
		{
			MethodName: "PostWrapperBody",
			Handler:    _BodyJSONService_PostWrapperBody_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/bodyjson/bodyjson.proto",
}

const (
	QueryStringService_GetEnumQuerystring_FullMethodName           = "/proto.bodyjson.QueryStringService/GetEnumQuerystring"
	QueryStringService_GetStringQuerystring_FullMethodName         = "/proto.bodyjson.QueryStringService/GetStringQuerystring"
	QueryStringService_GetRepeatedEnumQuerystring_FullMethodName   = "/proto.bodyjson.QueryStringService/GetRepeatedEnumQuerystring"
	QueryStringService_GetRepeatedStringQuerystring_FullMethodName = "/proto.bodyjson.QueryStringService/GetRepeatedStringQuerystring"
	QueryStringService_GetTimestampQuerystring_FullMethodName      = "/proto.bodyjson.QueryStringService/GetTimestampQuerystring"
	QueryStringService_GetWrapperQuerystring_FullMethodName        = "/proto.bodyjson.QueryStringService/GetWrapperQuerystring"
)

// QueryStringServiceClient is the client API for QueryStringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QueryStringServiceClient interface {
	GetEnumQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	GetStringQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	GetRepeatedEnumQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	GetRepeatedStringQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error)
	GetTimestampQuerystring(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
	GetWrapperQuerystring(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error)
}

type queryStringServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryStringServiceClient(cc grpc.ClientConnInterface) QueryStringServiceClient {
	return &queryStringServiceClient{cc}
}

func (c *queryStringServiceClient) GetEnumQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, QueryStringService_GetEnumQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryStringServiceClient) GetStringQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, QueryStringService_GetStringQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryStringServiceClient) GetRepeatedEnumQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, QueryStringService_GetRepeatedEnumQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryStringServiceClient) GetRepeatedStringQuerystring(ctx context.Context, in *examplepb.ABitOfEverything, opts ...grpc.CallOption) (*examplepb.ABitOfEverything, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(examplepb.ABitOfEverything)
	err := c.cc.Invoke(ctx, QueryStringService_GetRepeatedStringQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryStringServiceClient) GetTimestampQuerystring(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, QueryStringService_GetTimestampQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryStringServiceClient) GetWrapperQuerystring(ctx context.Context, in *WellKnownTypesHolder, opts ...grpc.CallOption) (*WellKnownTypesHolder, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WellKnownTypesHolder)
	err := c.cc.Invoke(ctx, QueryStringService_GetWrapperQuerystring_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryStringServiceServer is the server API for QueryStringService service.
// All implementations must embed UnimplementedQueryStringServiceServer
// for forward compatibility.
type QueryStringServiceServer interface {
	GetEnumQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	GetStringQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	GetRepeatedEnumQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	GetRepeatedStringQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error)
	GetTimestampQuerystring(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	GetWrapperQuerystring(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error)
	mustEmbedUnimplementedQueryStringServiceServer()
}

// UnimplementedQueryStringServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedQueryStringServiceServer struct{}

func (UnimplementedQueryStringServiceServer) GetEnumQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnumQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) GetStringQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStringQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) GetRepeatedEnumQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepeatedEnumQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) GetRepeatedStringQuerystring(context.Context, *examplepb.ABitOfEverything) (*examplepb.ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepeatedStringQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) GetTimestampQuerystring(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimestampQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) GetWrapperQuerystring(context.Context, *WellKnownTypesHolder) (*WellKnownTypesHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWrapperQuerystring not implemented")
}
func (UnimplementedQueryStringServiceServer) mustEmbedUnimplementedQueryStringServiceServer() {}
func (UnimplementedQueryStringServiceServer) testEmbeddedByValue()                            {}

// UnsafeQueryStringServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QueryStringServiceServer will
// result in compilation errors.
type UnsafeQueryStringServiceServer interface {
	mustEmbedUnimplementedQueryStringServiceServer()
}

func RegisterQueryStringServiceServer(s grpc.ServiceRegistrar, srv QueryStringServiceServer) {
	// If the following call pancis, it indicates UnimplementedQueryStringServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&QueryStringService_ServiceDesc, srv)
}

func _QueryStringService_GetEnumQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetEnumQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetEnumQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetEnumQuerystring(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryStringService_GetStringQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetStringQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetStringQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetStringQuerystring(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryStringService_GetRepeatedEnumQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetRepeatedEnumQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetRepeatedEnumQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetRepeatedEnumQuerystring(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryStringService_GetRepeatedStringQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(examplepb.ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetRepeatedStringQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetRepeatedStringQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetRepeatedStringQuerystring(ctx, req.(*examplepb.ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryStringService_GetTimestampQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetTimestampQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetTimestampQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetTimestampQuerystring(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryStringService_GetWrapperQuerystring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownTypesHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryStringServiceServer).GetWrapperQuerystring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueryStringService_GetWrapperQuerystring_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryStringServiceServer).GetWrapperQuerystring(ctx, req.(*WellKnownTypesHolder))
	}
	return interceptor(ctx, in, info, handler)
}

// QueryStringService_ServiceDesc is the grpc.ServiceDesc for QueryStringService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QueryStringService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.bodyjson.QueryStringService",
	HandlerType: (*QueryStringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEnumQuerystring",
			Handler:    _QueryStringService_GetEnumQuerystring_Handler,
		},
		{
			MethodName: "GetStringQuerystring",
			Handler:    _QueryStringService_GetStringQuerystring_Handler,
		},
		{
			MethodName: "GetRepeatedEnumQuerystring",
			Handler:    _QueryStringService_GetRepeatedEnumQuerystring_Handler,
		},
		{
			MethodName: "GetRepeatedStringQuerystring",
			Handler:    _QueryStringService_GetRepeatedStringQuerystring_Handler,
		},
		{
			MethodName: "GetTimestampQuerystring",
			Handler:    _QueryStringService_GetTimestampQuerystring_Handler,
		},
		{
			MethodName: "GetWrapperQuerystring",
			Handler:    _QueryStringService_GetWrapperQuerystring_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/bodyjson/bodyjson.proto",
}
