// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: proto/paramtest/bodyjson.proto

/* eslint-disable */
import { Any } from "../../google/protobuf/any";
import { Duration } from "../../google/protobuf/duration";
import { Empty } from "../../google/protobuf/empty";
import { FieldMask } from "../../google/protobuf/field_mask";
import { Timestamp } from "../../google/protobuf/timestamp";
import { ABitOfEverything } from "../examplepb/a_bit_of_everything";

export const protobufPackage = "proto.paramtest";

export interface WellKnownTypesHolder {
  payloadCheck: string;
  any: Any | undefined;
  empty: Empty | undefined;
  struct: { [key: string]: any } | undefined;
  value: any | undefined;
  listValue: Array<any> | undefined;
  timestamp: Date | undefined;
  duration: Duration | undefined;
  fieldMask: string[] | undefined;
  boolValue: boolean | undefined;
  int32Value: number | undefined;
  uint32Value: number | undefined;
  int64Value: number | undefined;
  uint64Value: number | undefined;
  stringValue: string | undefined;
  bytesValue: Uint8Array | undefined;
  doubleValue: number | undefined;
  floatValue: number | undefined;
}

function createBaseWellKnownTypesHolder(): WellKnownTypesHolder {
  return {
    payloadCheck: "",
    any: undefined,
    empty: undefined,
    struct: undefined,
    value: undefined,
    listValue: undefined,
    timestamp: undefined,
    duration: undefined,
    fieldMask: undefined,
    boolValue: undefined,
    int32Value: undefined,
    uint32Value: undefined,
    int64Value: undefined,
    uint64Value: undefined,
    stringValue: undefined,
    bytesValue: undefined,
    doubleValue: undefined,
    floatValue: undefined,
  };
}

export const WellKnownTypesHolder: MessageFns<WellKnownTypesHolder> = {
  fromJSON(object: any): WellKnownTypesHolder {
    return {
      payloadCheck: isSet(object.payload_check)
        ? globalThis.String(object.payload_check)
        : "",
      any: isSet(object.any) ? Any.fromJSON(object.any) : undefined,
      empty: isSet(object.empty) ? Empty.fromJSON(object.empty) : undefined,
      struct: isObject(object.struct) ? object.struct : undefined,
      value: isSet(object?.value) ? object.value : undefined,
      listValue: globalThis.Array.isArray(object.list_value)
        ? [...object.list_value]
        : undefined,
      timestamp: isSet(object.timestamp)
        ? fromJsonTimestamp(object.timestamp)
        : undefined,
      duration: isSet(object.duration)
        ? Duration.fromJSON(object.duration)
        : undefined,
      fieldMask: isSet(object.field_mask)
        ? FieldMask.unwrap(FieldMask.fromJSON(object.field_mask))
        : undefined,
      boolValue: isSet(object.bool_value)
        ? Boolean(object.bool_value)
        : undefined,
      int32Value: isSet(object.int32_value)
        ? Number(object.int32_value)
        : undefined,
      uint32Value: isSet(object.uint32_value)
        ? Number(object.uint32_value)
        : undefined,
      int64Value: isSet(object.int64_value)
        ? Number(object.int64_value)
        : undefined,
      uint64Value: isSet(object.uint64_value)
        ? Number(object.uint64_value)
        : undefined,
      stringValue: isSet(object.string_value)
        ? String(object.string_value)
        : undefined,
      bytesValue: isSet(object.bytes_value)
        ? new Uint8Array(object.bytes_value)
        : undefined,
      doubleValue: isSet(object.double_value)
        ? Number(object.double_value)
        : undefined,
      floatValue: isSet(object.float_value)
        ? Number(object.float_value)
        : undefined,
    };
  },

  toJSON(message: WellKnownTypesHolder): unknown {
    const obj: any = {};
    if (message.payloadCheck !== "") {
      obj.payload_check = message.payloadCheck;
    }
    if (message.any !== undefined) {
      obj.any = Any.toJSON(message.any);
    }
    if (message.empty !== undefined) {
      obj.empty = Empty.toJSON(message.empty);
    }
    if (message.struct !== undefined) {
      obj.struct = message.struct;
    }
    if (message.value !== undefined) {
      obj.value = message.value;
    }
    if (message.listValue !== undefined) {
      obj.list_value = message.listValue;
    }
    if (message.timestamp !== undefined) {
      obj.timestamp = message.timestamp.toISOString();
    }
    if (message.duration !== undefined) {
      obj.duration = Duration.toJSON(message.duration);
    }
    if (message.fieldMask !== undefined) {
      obj.field_mask = FieldMask.toJSON(FieldMask.wrap(message.fieldMask));
    }
    if (message.boolValue !== undefined) {
      obj.bool_value = message.boolValue;
    }
    if (message.int32Value !== undefined) {
      obj.int32_value = message.int32Value;
    }
    if (message.uint32Value !== undefined) {
      obj.uint32_value = message.uint32Value;
    }
    if (message.int64Value !== undefined) {
      obj.int64_value = message.int64Value;
    }
    if (message.uint64Value !== undefined) {
      obj.uint64_value = message.uint64Value;
    }
    if (message.stringValue !== undefined) {
      obj.string_value = message.stringValue;
    }
    if (message.bytesValue !== undefined) {
      obj.bytes_value = message.bytesValue;
    }
    if (message.doubleValue !== undefined) {
      obj.double_value = message.doubleValue;
    }
    if (message.floatValue !== undefined) {
      obj.float_value = message.floatValue;
    }
    return obj;
  },

  create(base?: DeepPartial<WellKnownTypesHolder>): WellKnownTypesHolder {
    return WellKnownTypesHolder.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<WellKnownTypesHolder>): WellKnownTypesHolder {
    const message = createBaseWellKnownTypesHolder();
    message.payloadCheck = object.payloadCheck ?? "";
    message.any =
      object.any !== undefined && object.any !== null
        ? Any.fromPartial(object.any)
        : undefined;
    message.empty =
      object.empty !== undefined && object.empty !== null
        ? Empty.fromPartial(object.empty)
        : undefined;
    message.struct = object.struct ?? undefined;
    message.value = object.value ?? undefined;
    message.listValue = object.listValue ?? undefined;
    message.timestamp = object.timestamp ?? undefined;
    message.duration =
      object.duration !== undefined && object.duration !== null
        ? Duration.fromPartial(object.duration)
        : undefined;
    message.fieldMask = object.fieldMask ?? undefined;
    message.boolValue = object.boolValue ?? undefined;
    message.int32Value = object.int32Value ?? undefined;
    message.uint32Value = object.uint32Value ?? undefined;
    message.int64Value = object.int64Value ?? undefined;
    message.uint64Value = object.uint64Value ?? undefined;
    message.stringValue = object.stringValue ?? undefined;
    message.bytesValue = object.bytesValue ?? undefined;
    message.doubleValue = object.doubleValue ?? undefined;
    message.floatValue = object.floatValue ?? undefined;
    return message;
  },
};

/** normal fields */
export type BodyJSONServiceDefinition = typeof BodyJSONServiceDefinition;
export const BodyJSONServiceDefinition = {
  name: "BodyJSONService",
  fullName: "proto.paramtest.BodyJSONService",
  methods: {
    postEnumBody: {
      name: "PostEnumBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              35, 58, 10, 101, 110, 117, 109, 95, 118, 97, 108, 117, 101, 34,
              21, 47, 118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47,
              101, 110, 117, 109, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postStringBody: {
      name: "PostStringBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              39, 58, 12, 115, 116, 114, 105, 110, 103, 95, 118, 97, 108, 117,
              101, 34, 23, 47, 118, 49, 47, 98, 111, 100, 121, 106, 115, 111,
              110, 47, 115, 116, 114, 105, 110, 103, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postRepeatedMessageBody: {
      name: "PostRepeatedMessageBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              42, 58, 6, 110, 101, 115, 116, 101, 100, 34, 32, 47, 118, 49, 47,
              98, 111, 100, 121, 106, 115, 111, 110, 47, 114, 101, 112, 101, 97,
              116, 101, 100, 109, 101, 115, 115, 97, 103, 101, 98, 111, 100,
              121,
            ]),
          ],
        },
      },
    },
    postRepeatedEnumBody: {
      name: "PostRepeatedEnumBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              52, 58, 19, 114, 101, 112, 101, 97, 116, 101, 100, 95, 101, 110,
              117, 109, 95, 118, 97, 108, 117, 101, 34, 29, 47, 118, 49, 47, 98,
              111, 100, 121, 106, 115, 111, 110, 47, 114, 101, 112, 101, 97,
              116, 101, 100, 101, 110, 117, 109, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postRepeatedStringBody: {
      name: "PostRepeatedStringBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              56, 58, 21, 114, 101, 112, 101, 97, 116, 101, 100, 95, 115, 116,
              114, 105, 110, 103, 95, 118, 97, 108, 117, 101, 34, 31, 47, 118,
              49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47, 114, 101, 112,
              101, 97, 116, 101, 100, 115, 116, 114, 105, 110, 103, 98, 111,
              100, 121,
            ]),
          ],
        },
      },
    },
    postMapMessageBody: {
      name: "PostMapMessageBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              50, 58, 19, 109, 97, 112, 112, 101, 100, 95, 110, 101, 115, 116,
              101, 100, 95, 118, 97, 108, 117, 101, 34, 27, 47, 118, 49, 47, 98,
              111, 100, 121, 106, 115, 111, 110, 47, 109, 97, 112, 109, 101,
              115, 115, 97, 103, 101, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postMapEnumBody: {
      name: "PostMapEnumBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              37, 58, 9, 109, 97, 112, 95, 118, 97, 108, 117, 101, 34, 24, 47,
              118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47, 109, 97,
              112, 101, 110, 117, 109, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postMapStringBody: {
      name: "PostMapStringBody",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              49, 58, 19, 109, 97, 112, 112, 101, 100, 95, 115, 116, 114, 105,
              110, 103, 95, 118, 97, 108, 117, 101, 34, 26, 47, 118, 49, 47, 98,
              111, 100, 121, 106, 115, 111, 110, 47, 109, 97, 112, 115, 116,
              114, 105, 110, 103, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postTimestampBody: {
      name: "PostTimestampBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              39, 58, 9, 116, 105, 109, 101, 115, 116, 97, 109, 112, 34, 26, 47,
              118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47, 116, 105,
              109, 101, 115, 116, 97, 109, 112, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postFieldMaskBody: {
      name: "PostFieldMaskBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              40, 58, 10, 102, 105, 101, 108, 100, 95, 109, 97, 115, 107, 34,
              26, 47, 118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47,
              102, 105, 101, 108, 100, 109, 97, 115, 107, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postStructBody: {
      name: "PostStructBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              33, 58, 6, 115, 116, 114, 117, 99, 116, 34, 23, 47, 118, 49, 47,
              98, 111, 100, 121, 106, 115, 111, 110, 47, 115, 116, 114, 117, 99,
              116, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postValueBody: {
      name: "PostValueBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              31, 58, 5, 118, 97, 108, 117, 101, 34, 22, 47, 118, 49, 47, 98,
              111, 100, 121, 106, 115, 111, 110, 47, 118, 97, 108, 117, 101, 98,
              111, 100, 121,
            ]),
          ],
        },
      },
    },
    postListValueBody: {
      name: "PostListValueBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              40, 58, 10, 108, 105, 115, 116, 95, 118, 97, 108, 117, 101, 34,
              26, 47, 118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47,
              108, 105, 115, 116, 118, 97, 108, 117, 101, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
    postWrapperBody: {
      name: "PostWrapperBody",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              39, 58, 11, 105, 110, 116, 54, 52, 95, 118, 97, 108, 117, 101, 34,
              24, 47, 118, 49, 47, 98, 111, 100, 121, 106, 115, 111, 110, 47,
              119, 114, 97, 112, 112, 101, 114, 98, 111, 100, 121,
            ]),
          ],
        },
      },
    },
  },
} as const;

export type QueryStringServiceDefinition = typeof QueryStringServiceDefinition;
export const QueryStringServiceDefinition = {
  name: "QueryStringService",
  fullName: "proto.paramtest.QueryStringService",
  methods: {
    getEnumQuerystring: {
      name: "GetEnumQuerystring",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              33, 18, 31, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 101, 110, 117, 109, 113, 117, 101, 114,
              121, 115, 116, 114, 105, 110, 103,
            ]),
          ],
        },
      },
    },
    getStringQuerystring: {
      name: "GetStringQuerystring",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              35, 18, 33, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 115, 116, 114, 105, 110, 103, 113, 117,
              101, 114, 121, 115, 116, 114, 105, 110, 103,
            ]),
          ],
        },
      },
    },
    getRepeatedEnumQuerystring: {
      name: "GetRepeatedEnumQuerystring",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              41, 18, 39, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 114, 101, 112, 101, 97, 116, 101, 100,
              101, 110, 117, 109, 113, 117, 101, 114, 121, 115, 116, 114, 105,
              110, 103,
            ]),
          ],
        },
      },
    },
    getRepeatedStringQuerystring: {
      name: "GetRepeatedStringQuerystring",
      requestType: ABitOfEverything,
      requestStream: false,
      responseType: ABitOfEverything,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              43, 18, 41, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 114, 101, 112, 101, 97, 116, 101, 100,
              115, 116, 114, 105, 110, 103, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103,
            ]),
          ],
        },
      },
    },
    getTimestampQuerystring: {
      name: "GetTimestampQuerystring",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              38, 18, 36, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 116, 105, 109, 101, 115, 116, 97, 109,
              112, 113, 117, 101, 114, 121, 115, 116, 114, 105, 110, 103,
            ]),
          ],
        },
      },
    },
    getWrapperQuerystring: {
      name: "GetWrapperQuerystring",
      requestType: WellKnownTypesHolder,
      requestStream: false,
      responseType: WellKnownTypesHolder,
      responseStream: false,
      options: {
        _unknownFields: {
          578365826: [
            new Uint8Array([
              36, 18, 34, 47, 118, 49, 47, 113, 117, 101, 114, 121, 115, 116,
              114, 105, 110, 103, 47, 119, 114, 97, 112, 112, 101, 114, 113,
              117, 101, 114, 121, 115, 116, 114, 105, 110, 103,
            ]),
          ],
        },
      },
    },
  },
} as const;

type Builtin =
  | Date
  | Function
  | Uint8Array
  | string
  | number
  | boolean
  | undefined;

export type DeepPartial<T> = T extends Builtin
  ? T
  : T extends globalThis.Array<infer U>
    ? globalThis.Array<DeepPartial<U>>
    : T extends ReadonlyArray<infer U>
      ? ReadonlyArray<DeepPartial<U>>
      : T extends {}
        ? { [K in keyof T]?: DeepPartial<T[K]> }
        : Partial<T>;

function fromTimestamp(t: Timestamp): Date {
  let millis = (t.seconds || 0) * 1_000;
  millis += (t.nanos || 0) / 1_000_000;
  return new globalThis.Date(millis);
}

function fromJsonTimestamp(o: any): Date {
  if (o instanceof globalThis.Date) {
    return o;
  } else if (typeof o === "string") {
    return new globalThis.Date(o);
  } else {
    return fromTimestamp(Timestamp.fromJSON(o));
  }
}

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
