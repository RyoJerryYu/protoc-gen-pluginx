syntax = "proto3";

package e2e;

import "google/api/annotations.proto";
import "google/api/http.proto";

option go_package = "./e2e;e2e";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello(HelloRequest) returns (HelloReply) {
    option (google.api.http) = {get: "/v1/example/echo"};
  }

  rpc SayHelloPost(HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/example/echo"
      body: "*"
    };
  }
  rpc SayHttp(HelloRequest) returns (google.api.Http) {
    option (google.api.http) = {get: "/v1/example/echo/http"};
  }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

// Basic just tests basic fields, including oneofs and so on that don't
// generally work automatically with encoding/json.
message Basic {
  string a = 1;

  oneof b {
    int32 int = 2;
    string str = 3;
  }

  map<string, string> map = 4;

  optional string o = 5;
}

// Test nested types
message Nested {
  message Message {
    Basic basic = 1;
  }
}
